/** ***********************************************************************************
The functions for button 'Change  Keywords' in issue edit page. 
*/

// add 'click' callback function to 'keyword_edit' button
function kbutton_reset(){	
	$("#keyword_edit")
	.unbind("click")
	.click(function(){
		var tag = ['<form>','<label><%=_klabel%></label>','<select id="keywords" name="keywords"  multiple="multiple" title="Click to select keywords">','</select>', '</form>'];
		value = $("#keyword").attr("value");		
		selected = value.split(",");		
		keywords = '<%=_keywords%>';		
		if (keywords != '' ){
			keywords = keywords.split(',');			
			keywords.reverse();
			$.each(keywords, function(){		
				value = $.trim(this);		
				if ( $.inArray(value, selected) == -1){
					option = '<option value="' + value + '" >' + value +  '</option>';				
				}
				else{
					option = '<option value="' + value + '"  selected="selected" >' + value +  '</option>';
				}
				tag.splice(3, 0, option);
			});
		};

		// Append scripts to make autocompleting function
		script = '	<script type="text/javascript">\
					$("select[multiple]").asmSelect({\
						addItemTarget: "bottom",\
						animate: true,\
						highlight: true,\
						sortable: true	});\
				</script>';

		tag.push(script);
		html = tag.join('\n');

		$.prompt( html,
				{ submit: set_input,
				  callback: kbutton_reset,
				  buttons: { <%=_ok%>: 'confirm', <%=_cancel%>: 'cancel' }
			 	});
	});
}

if (<%=_kbn_enable%> == 1){
	// import liberary
	scripts = ['jquery.asmselect.js', 'jquery.color.js', 'jquery.ui.js']
	$.each(scripts, function(){
		url = ['lib', 'asmselect', this].join('/');
		$.getScript(url);
	});

	var input = '<button type="button" id="keyword_edit"  ><%=_kbutton%></button>';
	$("#keyword").parent().append(input);

	// add some attributes to the button
	$("#keyword_edit").attr({
		 "style" : "width:auto;height:2.0em;font-weight:bold;font-size:1.1em;"	
	});
	// Initialize the page and reset the 'keyword_edit' button first.
	kbutton_reset();
}
//******************************** End ***************************************************


/* ************************************************************************************
The functions for button 'Change  Persons' in issue edit page.
*/

// add 'click' callback function to 'nosy_edit' button
function pbutton_reset(){	
	$("#nosy_edit")
	.unbind("click")
	.click(function(){
		var tag = ['<form>', '<label><%=_plabel%></label>', '<select id="persons" name="persons" >', '</select>', '</form>'];
		value = $("#nosy").attr("value");
		
		if (value.length != 0){
			selected = value.split(",");
			for(i in selected){selected[i] = $.trim(selected[i])};			
			if (selected.length > 0){
				selected.reverse();
				for(i in selected){
					option = '<option value=" ' + selected[i] + ' " class="selected">' +selected[i] + '</option>'; 
					tag.splice(3, 0, option);
				};							
			};
		};

		// Append scripts to make autocompleting function
		script = '	<script type="text/javascript">\
				$("#persons").fcbkcomplete({\
					json_url: "issue/issue.ks/get_adminList",\
					filter_case: true,\
					filter_hide: true,\
					filter_selected: true,\
					newel: true\
				});</script>';

		tag.push(script);
		html = tag.join('\n');

		$.prompt( html,
				{ submit: set_input,
				  callback: pbutton_reset,
				  buttons: { <%=_ok%>: 'confirm', <%=_cancel%>: 'cancel' }
			 	});
	});
}

if (<%=_pbn_enable%> == 1){
	$.getScript('lib/multiselect/jquery.fcbkcomplete.js');

	// add a button after 'nosy_edit' input field
	var input = '<button type="button" id="nosy_edit" ><%=_pbutton%></button>';
	$("#nosy").parent().append(input);
	// add some attributes to the button
	$("#nosy_edit").attr({
		 "style" : "width:auto;height:2.0em;font-weight:bold;font-size:1.1em;"	
	});

	// Initialize the page and reset the 'nosy_edit' button first.
	pbutton_reset();
}

//********************************* End ***************************************************

/******************************************************************************************* 
public function
*/
// a function for set the selected values to existed input field
function set_input(v,m,f){	
	// "Cancel" button clicked, no action.
	if (v == "cancel" ){return 'false'};
	
	// get the id of "select"  html component 
	id = $($("div .jqimessage select")[0]).attr("id");
	
	// to different select id, relect different input component in the issue edit html page	
	oAdaptor = {"persons" : "#nosy", "asmSelect0" : "#keyword"};
	$.each(oAdaptor, function(key, value){
		if (key == id){			
			input = $(value);
			return false
		}	
		else{ return true }				
	});
	
	// get all the options included by the select component
	options = $("#" + id).children();
	
	// save the selected values
	aCache = [];
	if (id == "persons"){
		$.each(options, function(){
			if ($(this).attr("class") == "selected"){
				aCache.push($(this).attr("value"));		
			}	
		});
	}
	else{
		$.each(options, function(){
			if ( $(this).attr("disabled")){
				aCache.push($(this).attr("value"));		
			}	
		});
	}	
	
	assign_select = $("#assignedto");
	if (aCache.length == 0){
		selected = "";
		if(id == "persons"){assign_select.empty();}
	} 					
	else{		
		for (i in aCache){aCache[i] = $.trim(aCache[i])};			
		selected = aCache.join(',');
		// for 'persons' select button, it's need to set the 'assignedto' options		
		if (id == "persons"){			
			assign_select.empty();				
			select_value = assign_select.val();	
			if(!select_value){
				d = $("<option>" +'' + "</option>");
				d.attr({'value': select_value, 'selected':'selected'});
				assign_select.append(d);
			}			
						
			$.each(aCache, function(i, v){
				d = $("<option>" +v + "</option>");				
				if (select_value && v == select_value){
					jAttr = {'value' : v, 'selected' : 'selected'}	
				}
				else{jAttr = {'value' : v};}				
				d.attr(jAttr);				
				assign_select.append(d);
			});			
		} 
		
	};
	
	input.attr("value", selected);
};

//***************************** End ***************************