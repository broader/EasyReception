<html>
<head>
<title>Python scripts</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="STYLESHEET" href="lib.css">
<style type="text/css">
<!--
dl {  background-color: #FFFFCC; border-width: 1; border-style:solid;}
-->
</style></head>

<body>

<h1><%= chapter %>. Python scripts</h1>
<p>Running Python scripts with Karrigell is straightforward. Open you favorite Python
code editor, create the following script :</p>
<div class="verbatim">
<pre class="verbatim">
print &quot;Hello Karrigell !&quot;
</pre>
</div>
<p>and save it under the name <span class="file">hello.py</span> in the
<%= make_link("Root Directory","directories") %>. Then type
  <span class="url">http://localhost/hello.py</span>
  and you should see the message appear in your browser</p>
<p>Python scripts run with Karrigell are ordinary Python scripts, except that
the <code>print</code>   statement sends the output to the client's browser
instead of the console window. Therefore you'll have to write HTML code if
you need the correct formatting ; for a minimal table you'll have to write
something like</p>
<div class="verbatim">
<pre class="verbatim">
print &quot;&lt;TABLE&gt;&quot;
print &quot;&lt;TR&gt;&quot;
print &quot;&lt;TD&gt;Name&lt;/TD&gt;&quot;
print &quot;&lt;TD&gt;Address&lt;/TD&gt;&quot;
print &quot;&lt;/TR&gt;&quot;
print &quot;&lt;/TABLE&gt;&quot;
</pre>
</div>
<p>or, using the multi-line Python syntax :</p>
<div class="verbatim">
<pre class="verbatim">
print &quot;&quot;&quot;&lt;TABLE&gt;
      &lt;TR&gt;
        &lt;TD&gt;Name&lt;/TD&gt;
        &lt;TD&gt;Address&lt;/TD&gt;
      &lt;/TR&gt;
    &lt;/TABLE&gt;&quot;&quot;&quot;
</pre>
</div>
or if you want to use the <%= make_link("HTMLTags","htmltags") %> module :

<p>
<div class="verbatim">
<pre class="verbatim">
from HTMLTags import *
print TABLE(TR(TD("Name")+TD("Address")))
</pre>
</div>

<p>If you write Python scripts that musn't be executed by Karrigell (for instance because
they have a GUI-based interaction with the user) you can include this code at the top of 
your script :
<p>
<div class="verbatim">
<pre class="verbatim">
try:
    SCRIPT_END
except NameError:
    pass
else:
    print "This script can't be executed by Karrigell"
    raise SCRIPT_END
    
(... rest of your script here ...)
</pre>
</div>

<p>Since <code>SCRIPT_END</code> is in the namespace of Python scripts when executed in
Karrigell, the execution stops in this case ; when run from the command line, a 
<code>NameError</code> is raised, and is ignored by the script

</body>
</html>


