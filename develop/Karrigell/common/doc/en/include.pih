<h1><%= chapter %>. Including other documents or scripts</h1>
Inside a script you can ask Karrigell to include the content of another static 
file or the output of another script by the <code>Include(<var>url</var>)
</code> function, where <var>url</var> is the url of the file or script 
(you can use aliases as for ordinary files)
<p>This is useful if you want to build a set of pages with components which 
will be present in each page (for instance a header and/or a footer). Your
script will be built this way :
<p>
<div class="python"><pre class="verbatim">
Include("authenticationTest.py")    # a script testing user authentication
Include("header.htm")   # a static file with a title, style sheet etc
(... your script body ...)
Include("footer.py")    # a script which will print current date for instance
</pre></div>

<p>At runtime, Karrigell will raise a RecursionError in case of loops (scripts 
that include themselves, or script 1 includes script 2 which includes script 1)

<h2><%= chapter %>.1 Namespace</h2>

An included script is run in the same namespace as the script which "calls" 
it, including the variables defined in this script : if the caller script is

<p>
<div class="python">
<pre class="verbatim">
name="Brian"
print "The life of "
Include("whoseName.py")
</pre></div>
<p>

and <span class="file">whoseName.py</span> is

<p>
<div class="python"><pre class="verbatim">
print name
</pre></div>
<p>

you'll see that the <code>name</code> variable is available in the included 
script

<h2><%= chapter %>.2 Passing parameters</h2>

It can be useful to pass parameters to an included script : see for instance 
the menu script in the personal portal demo. This script takes as parameters
a list of menu items and the list of matching urls
<p>It will be included this way :
<div class="python">
<pre class="verbatim">
Labels=[...]
Urls=[...]
Include("k_menu.hip",
    labels=Labels,
    urls=Urls,
    targetUrl="index.pih")
</pre></div>

<p>Parameters can also be passed in the query string appended to the script 
url : with <code>Include("/mypath/aScript.pih?data=dummy")</code> the variable 
<code>data</code> will be available in the namespace of <code>aScript.pih
</code>