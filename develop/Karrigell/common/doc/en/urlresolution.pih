<script src="../pf_test.js"></script>

<h1><%= chapter %>. URL Resolution</h1>

<h2><%= chapter %>.1 Static files</h2>
<p>To serve static files (HTML files, GIF or JPEG Images, etc) all you have to do is to 
store them to the Root Directory</p>
<p>Suppose you create an HTML document called <code>myFile.htm</code> and put it in the 
Root Directory. Type in the URL <span class="url">http://myhost/myFile.htm</span> in the address
field of the browser ; you should see the file displayed in the browser</p>

<p>If you save the file in a subdirectory, you must prepend its name : for the file 
<span class="file">myImage.gif</span> in subdirectory <code>images</code>, the url will be
<span class="url">http://myhost/images/myImage.gif</span>

<h2><%= chapter %>.2 Alias</h2>

<p>To reach files out of the Root Directory, use aliases (see 
<%= make_link("configuration options","configuration") %>)

<h2><%= chapter %>.3 Default file extensions</h2>

<p>If the extension of a file is not specified, the server will look for a file with one of 
the extensions <span class="file">html, htm, py, pih, hip</span> or <span class="file">ks</span>. 
If it finds one, this file is used ; if it finds more than one, an exception is raised ; if no 
file is found, an exception is raised too
<p>

<h2><%= chapter %>.4 Directories</h2>

<p>If no file name is specified and the url matches a directory, the server looks for a file
with the name <span class="file">index.html, index.htm, index.py, index.pih, index.hip</span>
or <span class="file">index.ks</span>. If it fonds one, it is used to build the response ; 
if it finds more than one, it raises an exception
<p>If it doesn't find one, the behaviour depends on the option
<code>allow_directory_listing</code> in the <%= make_link("configuration options",
"configuration") %> : depending on its value, either a list of directories and files is
displayed, or an error message is sent back