<h1><%= chapter %>. Intégration à Apache </h1>

<p>Il y a plusieurs façons de faire fonctionner Karrigell avec Apache :
<TABLE border="1">
<tr><th>mode</th><th>description</th><th>pros</th><th>cons</th></tr>

<tr>
<td>Mode CGI</td>
<td>Les requêtes sont traitées par un script CGI</td>
<td>
  <ul>
  <li>compatible avec tous les hébergeurs web
  <li>pas de bloquage pour les requêtes longues (chaque requête est 
  exécutée dans un processus différent)
  </ul>
</td>
<td>
  <ul>
  <li>le surcoût du CGI réduit la performance
  </ul>
</td>
</tr>

<tr>
<td>Mode WSGI</td>
<td>La communication entre Apache et Karrigell utilise le standard WSGI et repose sur le module Apache mod_wsgi</td>
<td>
  <ul>
  <li>bonnes performances
  <li>WSGI est le standard de fait pour l'intégration des canevas web
  </ul>
</td>
<td>
  <ul>
  <li>nécessite le module mod_wsgi (pas disponible sur beaucoup de sites d'hébergement partagé)
  </ul>
</td>
</tr>


<tr>
<td>Mode mod_python</td>
<td>mod_python embarque un interpréteur Python dans le serveur Apache</td>
<td>
  <ul>
  <li>bonne performance (évite le surcoût du CGI)
  </ul>
</td>
<td>
  <ul>
  <li>nécessite l'installation du module mod_python (pas disponible chez
  tous les hébergeurs)
  </ul>
</td>
</tr>

<tr>
<td>Mode proxy</td>
<td>Le serveur intégré tourne en arrière-plan, le serveur Apache lui envoie
toutes les requêtes et renvoie la réponse au client</td>
<td>
  <ul>
  <li>bonne performance
  </ul>
</td>
<td>
  <ul>
  <li>nécessite la permission de faire tourner un processus long sur le serveur
  </ul>
</td>
</tr>


</table>

</ul>

<h2><%= chapter %>.1 Vue d'ensemble</h2> 

<p>Pour faire fonctionner Karrigell derrière Apache, certaines options 
doivent être définies dans le fichier de configuration 
<span class="file">httpd.conf</span> : le port du serveur, le 
répertoire racine (Document Root) pour l'hôte, et des directives 
qui s'appliquent au contenu du répertoire racine.
Pour simplifier l'installation, la seule directive requise est
<code>AllowOverride All</code>, qui dit au serveur d'appliquer les
directives définies dans les fichiers
<span class="file">.htacess</span> : un modèle de ces fichiers est
fourni dans la distribution Karrigell pour chaque mode

<p>Cela signifie que la section <code>&lt;Directory&gt;</code> relative à votre
répertoire racine dans <span class="file">httpd.conf</span> devrait avoir cette
forme :

<p>
<div class="verbatim">
<pre class="conf">
&lt;Directory <B>[[document_root]]</B>&gt;
    AllowOverride All
    Order allow,deny
    Allow from all
&lt;/Directory &gt;
</pre>
</div>

<p>Ici Karrigell ne gère qu'un seul hôte (les hôtes virtuels sont gérés par Apache), 
ce qui simplifie les options de configuration

<h2><%= chapter %>.2 Mode CGI</h2>

<p>Ce mode utilise les modules Apache <CODE>mod_rewrite</CODE> et <CODE>mod_cgi</CODE> ;
toutes les urls qui doivent être gérées par Karrigell (tout sauf les extensions de
fichiers statiques <span class="file">html, htm, css, js, jpg, jpeg, gif, png</span>)
sont "réécrites" par <CODE>mod_rewrite</CODE> pour être gérées par un unique script CGI, 
<code>k_handler.cgi</code>, situé par défaut dans le dossier
<code>karrigell/apache/cgi-bin</code>. Ce script récupère les options de configuration
de Karrigell dans le script de configuration <span class="file">conf.py</span>

<p>Ces modules doivent être chargés au lancement d'Apache, il faut donc veiller
à ce que ces lignes soient décommentées dans votre fichier 
<span class="file">httpd.conf</span>  :

<div class="verbatim">
<pre>LoadModule cgi_module modules/mod_cgi.so
LoadModule rewrite_module modules/mod_rewrite.so</pre>
</div>

<p>L'étape suivante est d'installer ou de télécharger le contenu décompressé 
du fichier <span class="file">Karrigell-Apache-<%= version %>.tar.gz</span> dans le
Répertoire Racine de votre espace Apache

<p>Ensuite, renommez le fichier <span class="file">.htaccess_cgi</span> dans ce
répertoire racine en <span class="file">.htaccess</span>

<p>Il faut aussi éditer la première ligne du script CGI <code>k_handler.cgi</code>
avec la commande adéquate pour lancer l'interpréteur Python. Sur Unix/Linux
c'est généralement <code>#!/usr/bin/python</code> et sous Windows <code>#!python</code>,
mais cela peut dépendre de la configuration du serveur

<p>Dans le meilleur des cas, cela suffit pour faire fonctionner Karrigell ! 
Il faudra simplement vérifier les modes d'écriture et d'exécution dans certains 
dossiers : "write" pour <span class="file">apache/data</span>, "execute" pour
<span class="file">apache/cgi-bin</span>. Le mode exact peut varier légèrement
selon les serveurs

<p>Dans d'autres cas (par exemple pour un hébergeur partagé) vous ne pourrez
pas exécuter les scripts CGI en dehors d'un dossier particulier, souvent appelé
cgi-bin. Dans ce cas :
<p>
<ul>
<li>mettez tous les fichiers du répertoire <span class="file">apache/cgi-bin</span>
dans ce dossier CGI<br>
<li>modofiez le script <span class="file">conf.py</span> and remplacez ces valeurs :
  <ul>
  <li>root_dir = (le chemin complet du répertoire racine)
  <li>karrigell_dir = os.path.join(root_dir,"karrigell")
  <li>server_dir = (le chemin complet du répertoire où vous avez mis les scripts CGI)
  <li>data_dir = le chemin complet d'un répertoire avec le mode WRITE, si
  possible en-dehors du répertoire racine pour des raisons de sécurité
  <li>cache_dir = os.path.join(data_dir, "cache")
  </ul>
<li>dans le fichier <span class="file">.htaccess</span> du répertoire racine, 
remplacez l'url du script <span class="file">k_handler.cgi</span> par la bonne
valeur. Souvent Apache est configuré avec une directive
<code>ScriptAlias</code> qui dit que les scripts qui se trouvent dans le
dossier CGI sont appelés avec l'url <code>cgi-bin</code> ; si c'est le cas
vous devez donner la valeur <span class="file">/cgi-bin/k_handler.cgi</span>
dans <span class="file">.htaccess</span>
</ul>

<p>Si vous ne connaissez pas les chemins complets, vous pouvez exécuter
le script CGI script <span class="file">cgi_dir.cgi</span> (en n'oubliant
pas de donner la bonne valeur pour l'interpréteur Python sur la première
ligne...). Il vous donnera le chemin complet du dossier CGI ; vous devriez
pouvoir déduire les autres chemins à partir de celui-ci

<h2><%= chapter %>.3 Intégration avec mod_wsgi</h2>

mod_wsgi est un module qui rend Apache capable de supporter toute application Python qui supporte l'interface WSGI

<p>Le script <span class="file">wsgi.py</span> dans le dossier <span class="file">apache/mod_wsgi</span> prend en charge toutes les urls qui doivent être gérées par Karrigell

<p>mod_wsgi doit être installé pour le serveur Apache. Pour cela la première chose à faire est de télécharger mod_wsgi depuis le <a href="http://code.google.com/p/modwsgi/">site web</a>, et de suivre les instructions pour l'installer dans le fichier de configuration d'Apache : dans la section  "Dynamic Shared Object (DSO) Support" de <span class="file">httpd.conf</span>, ajouter la ligne :

<div class="verbatim">
<pre>LoadModule wsgi_module modules/mod_wsgi.so</pre>
</div>

<p>Installer ou télécharger le contenu de <span class="file"> Karrigell-Apache-<%= version %>.tar.gz</span> dans le répertoire racine de votre espace Apache

<p>Si vous avez un fichier <span class="file">.htaccess</span> dans ce répertoire racine, supprimez-le ou donnez-lui un autre nom

<p>Puis dans <span class="file">httpd.conf</span>, ajoutez cette ligne :

<div class="verbatim">
<pre>WSGIScriptAlias / /path-to-Karrigell-root/karrigell/apache/mod_wsgi/wsgi.py
</div>

<p>Ceci dirigera toutes les requêtes vers le script <span class="file">wsgi.py</span>, qui gère toutes les requêtes en utilisant Karrigell et retourne le résultat au serveur Apache

<h2><%= chapter %>.4 Intégration avec mod_python</h2>

Mod_python est un module Apache qui intègre un interpréteur Python dans
le serveur. Il évite le surcoût CGI du lancement de l'interpréteur à chaque
requête, et permet donc de bien meilleures performances

<p>Le script <span class="file">mod_python_handler.py</span> dans le dossier
<span class="file">apache/mod_python</span> gère toutes les url qui doivent
être prises en charge par Karrigell

<p>Naturellement mod_python doit être installé par le serveur Apache. Pour cela,
la première chose à faire est de télécharger et d'installer mod_python depuis le
<a href="http://www.modpython.org/">site</a>, et de suivre les instructions
pour l'intégrer dans le fichier de configuration Apache. Dans la section
"Dynamic Shared Object (DSO) Support" de <span class="file">httpd.conf</span>, 
ajoutez la ligne :

<div class="verbatim">
<pre>LoadModule python_module modules/mod_python.so</pre>
</div>

<p>Installez ou téléchargez le contenu décompressé de <span class="file">
Karrigell-Apache-<%= version %>.tar.gz</span> dans le répertoire racine de votre espace
Apache

<p>Puis renommez le fichier <span class="file">.htaccess_mod_python</span> dans 
ce répertoire racine en <span class="file">.htaccess</span>

<p>Cela suffit pour faire fonctionner Karrigell. Pour des raisons de sécurité,
il est préférable d'éditer le script de configuration 
<span class="file">conf.py</span> et de remplacer la valeur <code>data_dir</code>
par le chemin complet d'un répertoire avec les droits WRITE, en-dehors du
Répertoire Racine