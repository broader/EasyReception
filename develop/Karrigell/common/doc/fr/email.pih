<h1><%= chapter %>. Sending e-mail</h1>


<h2><%= chapter %>.1 SendMail()</h2>
Karrigell fournit une classe, <code>SendMail()</code>, vous permettant de facilement envoyer des e-mails.<br>
<br>
Utilisation de <code>SendMail()</code> :<br>
<code>
import k_email<br>
msg = k_email.SendMail(u"Sujet de ce message", 'smtp.server.com')
</code>
<br>
<br>
<br>
Les paramètres de <code>SendMail()</code> sont :
<ul>
<li><code>subject</code> : Sujet du message.
<li><code>smtp_server</code> : Nom du serveur SMTP utilisé pour envoyer le message.
</ul>
<br>


<h2><%= chapter %>.2 set_from()</h2>
La méthode <code>set_from()</code>, permet de definir le champ "De" du message.<br>
<br>
Utilisation de <code>set_from()</code> :<br>
<code>
msg.set_from("Pierre", "pierre.quentel@wanadoo.fr")</code>
<br>
<br>
<br>
Les paramètres de <code>set_from()</code> sont :
<ul>
<li><code>name</code> : Nom "en clair". Si vous ne voulez pas spécifier de nom, cette chaine doit être vide.
<li><code>address</code> : Adresse e-mail (utilisée quand le destinataire clique "répondre" si le champ "reply to" n'est pas spécifié)
</ul>
<br>


<h2><%= chapter %>.3 set_reply_to()</h2>
La méthode <code>set_reply_to()</code>, vous permet de spécifier le champ "répondre à" du message.<br>
<br>
Utilisation de <code>set_reply_to()</code> :<br>
<code>
msg.set_reply_to("Pierre", "pierre.quentel@wanadoo.fr")</code>
<br>
<br>
<br>
Les paramètres de <code>set_reply_to()</code> sont :
<ul>
<li><code>name</code> : Nom "en clair". Si vous ne voulez pas spécifier de nom, cette chaine doit être vide.
<li><code>address</code> : Adresse e-mail utilisée pour envoyer la réponse.
</ul>

Si le champ "reply_to" n'est pas spécifié, le champ "from" sera utilisé pour envoyer la réponse. 
<br>
<br>


<h2><%= chapter %>.4 set_message()</h2>
La méthode <code>set_message()</code>, Vous permet de spécifier le contenu du corps du message.<br>
<br>
Utilisation de <code>set_message()</code> :<br>
<code>
msg.set_message("Contenu du message.")</code>
<br>
<br>
<br>
Le paramètre de <code>set_message()</code> est :
<ul>
<li><code>text</code> : Contenu du corps du message.
</ul>
<br>


<h2><%= chapter %>.5 add_recipient()</h2>
La méthode <code>add_recipient()</code>, vous permet d'ajouter un destinataire.<br>
<br>
Utilisation de <code>add_recipient()</code> :<br>
<code>
msg.add_recipient("Paul", "Paul@wanadoo.fr")<br>
msg.add_recipient("Paulette", "Paulette@wanado.fr", cc=True)</code>
<br>
<br>
<br>
Les paramètres de <code>add_recipient()</code> sont :
<ul>
<li><code>name</code> : Nom "en clair" du destinataire. Si vous ne voulez pas spécifier de nom, cette chaine doit être vide.
<li><code>address</code> : Adresse e-mail du destinataire.
<li><code>add_to_header</code> : Si True, name et address sont ajoutés à la liste "Pour" des destinataires (Valeur par défaut = True).
<li><code>add_to_smtp</code> : Si True, address est ajoutée à la liste des destinataires du serveur SMTP(Value par défaut = True).
<li><code>cc</code> : Si True, name et address sont ajoutés à la liste "copie à" des destinataires (Value par défaut = False).
</ul>
Seules les adresses ajoutées à la liste des destinataires du serveur SMTP recevront le message.<br>
Cela permet d'envoyer un message à une liste de destinaires sans révéler le contenu de cette liste aux destinataires :<br>
<code>
msg.add_recipient("My mailing list", '', True, False)    # Ajoute le nom du destinaire (affiché dans le gestionnaire d'e-mails)<br>
msg.add_recipient("", "Paul@wanado.fr", False, True)     # Ajoute l'adresse à la liste des destinataires du serveur SMTP (pas affiché dans le gestionnaire d'e-mails)<br>
msg.add_recipient("", "Paulette@wanado.fr", False, True) # Ajoute l'adresse à la liste des destinataires du serveur SMTP (pas affiché dans le gestionnaire d'e-mails)<br>
msg.add_recipient("", "Paulo@wanado.fr", False, True)    # Ajoute l'adresse à la liste des destinataires du serveur SMTP (pas affiché dans le gestionnaire d'e-mails)</code>
<br>
<br>


<h2><%= chapter %>.6 add_attachment()</h2>
La méthode <code>add_attachment()</code>, ajoute un fichier attaché au message.<br>
<br>
Utilisation de <code>add_attachment()</code> :<br>
<code>
msg.add_attachment("Mon fichier.pdf")</code>
<br>
<br>
<br>
Le paramètre de <code>add_attachment()</code> est :
<ul>
<li><code>fileName</code> : Nom du fichier à joindre.
</ul>
<br>


<h2><%= chapter %>.7 set_smtp_username_and_password()</h2>
La méthode <code>set_smtp_username_and_password()</code>, permet de définir le nom d'utilisateur 
ainsi que le mot de passe permettant d'accéder au serveur SMTP.<br>
<br>
Utilisation de <code>set_smtp_username_and_password()</code> :<br>
<code>
msg.set_smtp_username_and_password(smtp_user_name, smtp_password)</code>
<br>
<br>
<br>
Les paramètres de <code>set_smtp_username_and_password()</code> sont :
<ul>
<li><code>smtp_user_name</code> : Nom d'utilisateur du serveur SMTP.
<li><code>smtp_password</code> : Mot de passe associé au nom d'utilisateur.
</ul>
L'appel à cette méthode n'est pas obligatoire. Vous devez appeler <code>set_smtp_username_and_password()<code> 
seulement si le serveur SMTP que vous utilisez demande une authentification.
<br>
<br>


<h2><%= chapter %>.8 send()</h2>
La méthode <code>send()</code>, envoie le message à tous les destinataires qui se trouvent 
dans la liste des destinataires du serveur SMTP.<br>
<br>
Utilisation de <code>send()</code> :<br>
<code>
msg.send()</code>
<br>
<br>


<h2><%= chapter %>.9 Divers</h2>
Voici une liste de méthodes qui peuvent être utiles :

<ul>
<li><code>set_subject()</code> : Change le sujet du message.
<li><code>message_prepend()</code> : Ajoute du texte au début du message.
<li><code>message_append()</code> : Ajoute du texte à la fin du message.
<li><code>message_prepend_file()</code> : Ajoute le contenu d'un fichier texte au début du message.
<li><code>message_append_file()</code> : Ajoute le contenu d'un fichier texte à la fin du message.
<li><code>clear_recipients()</code> : Vide la liste des destinataires.
<li><code>clear_attachments()</code> : Vide la liste des fichiers attachés.
<li><code>set_smtp_server()</code> : Change l'addresse du serveur SMTP.
</ul>
<br>


<h2><%= chapter %>.10 Examples</h2>

<p>
<p> Dans l'exemple suivant, un message est envoyé à 4 destinataires. Un destinataire est en copie ('cc').
Un autre destinataire n'a pas de nom en clair, seule son adresse est connue. 2 fichiers sont attachés au message.

<pre class="verbatim">
import k_email

msg = k_email.SendMail(u"Subject of this message", 'smtp.server.com')
msg.set_from (u"Karrigell WEB site", '')
msg.set_message('Bonjour')
msg.set_reply_to(u"karrigell group", 'karrigell@googlegroups.com') # Pas obligatoire
msg.add_recipient(u'destinataire 1', 'recipient1@server1.com')
msg.add_recipient(u'destinataire 2', 'recipient2@server2.com')
msg.add_recipient(u'', 'recipient3@server3.com')
msg.add_recipient(u'destinataire 4', 'recipient4@server4.com', cc=True) # Pas obligatoire
msg.add_attachment ("Caracteres ASCII.pdf") # Not mandatory
msg.add_attachment (u"caractères UNICODE.pdf") # Not mandatory
msg.send()
</pre>


<br>

<p>Dans l'exemple suivant, un message est envoyé à 3 destnataires. 
Tous les destinataires verront 'Liste de diffusion' en tant qu'expéditeur et 'Liste Karrigell' en tant que destinataire. 

<pre class="verbatim">
import k_email

msg = k_email.SendMail(u"Subjet du message", 'smtp.server.com')
msg.set_from (u"Liste de diffusion", '')
msg.set_message('Bonjour à la liste')
msg.set_reply_to(u"Liste de diffusion", 'list@server.com')
msg.add_recipient(u'Liste Karrigell', '', True, False)
msg.add_recipient(u'', 'recipient1@server1.com', False, True)
msg.add_recipient(u'', 'recipient2@server2.com', False, True)
msg.add_recipient(u'', 'recipient3@server3.com', False, True)
msg.send()
</pre>