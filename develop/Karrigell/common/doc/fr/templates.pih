<h1><%= chapter %>. Intégration de moteurs de modèles</h1>

<p>Pour ceux qui sont familiers des moteurs de modèles, Karrigell rend leur
intégration extrêmement simple. Deux moteurs sont disponibles à travers des
fonctions intégrées, les autres peuvent être utilisés comme dans des
scripts Python ordinaires

<h3><%= chapter %>.1 Substitution de chaînes de Python</h3>

<p><i><b>AVERTISSEMENT:</b> PythonStringSubst est remplacé par <%= make_link('KT','kt') %>,
et sera enlevé de la prochaine version de Karrigell</i>

<p>Ce sytème de modèle utilise la syntaxe de substitution de chaînes
qui a été introduite dans Python 2.4. Les fichiers de modèles utilisent
des emplacements de la forme <code>$foo</code>

<p>Pour s'en servir dans des scripts, utilisez la fonction intégrée
<code>PythonStringSubst(url,arg1=val1,arg2=val2...)</code> :
elle va récupérer le code source depuis le fichier à l'url indiquée,
et lui appliquer les arguments mots-clés

<p>Par exemple, supposons que la source de modèle est

<div class="verbatim">
<pre>
&lt;HTML&gt;
&lt;HEAD&gt;&lt;TITLE&gt;$titre&lt;/TITLE&gt;&lt;/HEAD&gt;
&lt;BODY&gt;
$contenu
&lt;/BODY&gt;
&lt;/HTML&gt;
</pre>
</div>

Le résultat de <p>
<div class="python">
<pre>
print PythonStringSubst(src_url,
    titre='Substitution de chaînes de Python', 
    contenu='Bonjour tout le monde'
    )
</div>

<p>sera :
<p>
<div class="verbatim">
<pre>
&lt;HTML&gt;
&lt;HEAD&gt;&lt;TITLE&gt;Substitution de chaînes de Python&lt;/TITLE&gt;&lt;/HEAD&gt;
&lt;BODY&gt;
Bonjour tout le monde
&lt;/BODY&gt;
&lt;/HTML&gt;
</pre>
</div>

<h3><%= chapter %>.2 Cheetah</h3>

<p>Si le moteur de modèles Cheetah est disponible, vous pouvez l'utiliser
de la même façon que ci-dessus, avec une fonction intégrée
<br> <code>Cheetah(url,arg1=val1,arg2=val2...)</code><br>.
<code>url</code> est l'url du fichier de modèle, et les arguments mots-clés
sont utilisés pour produire le code HTML

<h3><%= chapter %>.3 Autres moteurs</h3>

<p>Pour utiliser d'autres moteurs, vous devez appliquer leur syntaxe
dans le script. Bien que les détails d'implémentation puissent varier,
votre code aura probablement l'allure suivante :
<p>
<div class="python">
<pre>
import Template # ou déclenche une Exception
# récupère la source depuis le fichier de modèle
templateDef = open(template_file_name).read()
# applique des mots-clés à la définition du modèle et imprime
print Template(templateDef, arg1=val1,arg2=val2,...)
</pre>
</div>