<h1><%= chapter %>. Configuration d'application</h1>

<h2><%= chapter %>.1 AppConfig()</h2>

Karrigell fournit un moyen simple de sauvegarder/restaurer des données simples pour votre application. 
L'utilisation principale est la configuration d'applications. 
Par example, la démo "Liste de diffusion" sauvegarde/restaure le nom du serveur SMTP en utilisant <code>AppConfig()</code>.

<p>AppConfig() accepte 1 paramètre : Le nom de votre application.
<br>Comme un serveur peut servir plusieurs applications, le nom de l'application est nécessaire pour sauver/restaurer 
les données dans/depuis des fichiers séparés.
Bien sûr, une application peut utiliser plusieurs noms pour ses propres besoins.

<p>Créer un objet AppConfig :
<code>
<br>import k_app_config
<br>app_config = k_app_config.AppConfig ("test")
</code>
<p>Sauvegarder une donnée est aussi simple que de l'écrire : 
<br><code>app_config.data = "test"</code>
<p>Restaurer une donnée est également très simple : 
<br><code>data = app_config.data</code>
<p> Pour effacer une donnée : 
<br><code>del(app_config.data)</code>

<br>
<p>Il est possible de sauvegarder/restaurer tout objet qui est "pickable".

<h2><%= chapter %>.2 Exemple</h2>

<p>
<pre class="verbatim">
import k_app_config
 
def GetSmtpServer ():
    app_config = k_app_config.AppConfig ("mailing list")
    try :
        return app_config.smtp_server
    except AttributeError :
        app_config.smtp.server = "my.smtp.server.com"
</pre>

<p>Dans cet exemple, si le membre smtp_server n'existe pas, une valeur par défaut lui est affectée.
<p>Bien sûr, dans la vraie vie, dans le cas d'une erreur de type AttributeError, il serait nécessaire de rediriger 
vers une page demandant à l'administrateur de saisir le nom du serveur smtp (voir la démo Liste de diffusion).