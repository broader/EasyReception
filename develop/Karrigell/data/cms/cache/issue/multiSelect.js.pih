[]
# -*- coding: utf_8 -*-
STDOUT("/** ***********************************************************************************\nThe functions for button \'Change  Keywords\' in issue edit page. \n*/\n// add \'click\' callback function to \'keyword_edit\' button\nfunction kbutton_reset(){	\n	$(\"#keyword_edit\")\n	.unbind(\"click\")\n	.click(function(){\n		var tag = [\'<form>\',\'<label>")
STDOUT(str(_klabel))
STDOUT("</label>\',\'<select id=\"keywords\" name=\"keywords\"  multiple=\"multiple\" title=\"Click to select keywords\">\',\'</select>\', \'</form>\'];\n		value = $(\"#keyword\").attr(\"value\");		\n		selected = value.split(\",\");		\n		keywords = \'")
STDOUT(str(_keywords))
STDOUT("\';		\n		if (keywords != \'\' ){\n			keywords = keywords.split(\',\');			\n			keywords.reverse();\n			$.each(keywords, function(){		\n				value = $.trim(this);		\n				if ( $.inArray(value, selected) == -1){\n					option = \'<option value=\"\' + value + \'\" >\' + value +  \'</option>\';				\n				}\n				else{\n					option = \'<option value=\"\' + value + \'\"  selected=\"selected\" >\' + value +  \'</option>\';\n				}\n				tag.splice(3, 0, option);\n			});\n		};\n		// Append scripts to make autocompleting function\n		script = \'	<script type=\"text/javascript\">\\\n					$(\"select[multiple]\").asmSelect({\\\n						addItemTarget: \"bottom\",\\\n						animate: true,\\\n						highlight: true,\\\n						sortable: true	});\\\n				</script>\';\n		tag.push(script);\n		html = tag.join(\'\\n\');\n		$.prompt( html,\n				{ submit: set_input,\n				  callback: kbutton_reset,\n				  buttons: { ")
STDOUT(str(_ok))
STDOUT(": \'confirm\', ")
STDOUT(str(_cancel))
STDOUT(": \'cancel\' }\n			 	});\n	});\n}\nif (")
STDOUT(str(_kbn_enable))
STDOUT(" == 1){\n	// import liberary\n	scripts = [\'jquery.asmselect.js\', \'jquery.color.js\', \'jquery.ui.js\']\n	$.each(scripts, function(){\n		url = [\'lib\', \'asmselect\', this].join(\'/\');\n		$.getScript(url);\n	});\n	var input = \'<button type=\"button\" id=\"keyword_edit\"  >")
STDOUT(str(_kbutton))
STDOUT("</button>\';\n	$(\"#keyword\").parent().append(input);\n	// add some attributes to the button\n	$(\"#keyword_edit\").attr({\n		 \"style\" : \"width:auto;height:2.0em;font-weight:bold;font-size:1.1em;\"	\n	});\n	// Initialize the page and reset the \'keyword_edit\' button first.\n	kbutton_reset();\n}\n//******************************** End ***************************************************\n/* ************************************************************************************\nThe functions for button \'Change  Persons\' in issue edit page.\n*/\n// add \'click\' callback function to \'nosy_edit\' button\nfunction pbutton_reset(){	\n	$(\"#nosy_edit\")\n	.unbind(\"click\")\n	.click(function(){\n		var tag = [\'<form>\', \'<label>")
STDOUT(str(_plabel))
STDOUT("</label>\', \'<select id=\"persons\" name=\"persons\" >\', \'</select>\', \'</form>\'];\n		value = $(\"#nosy\").attr(\"value\");\n		if (value.length != 0){\n			selected = value.split(\",\");\n			for(i in selected){selected[i] = $.trim(selected[i])};			\n			if (selected.length > 0){\n				selected.reverse();\n				for(i in selected){\n					option = \'<option value=\" \' + selected[i] + \' \" class=\"selected\">\' +selected[i] + \'</option>\'; \n					tag.splice(3, 0, option);\n				};							\n			};\n		};\n		// Append scripts to make autocompleting function\n		script = \'	<script type=\"text/javascript\">\\\n				$(\"#persons\").fcbkcomplete({\\\n					json_url: \"issue/issue.ks/get_adminList\",\\\n					filter_case: true,\\\n					filter_hide: true,\\\n					filter_selected: true,\\\n					newel: true\\\n				});</script>\';\n		tag.push(script);\n		html = tag.join(\'\\n\');\n		$.prompt( html,\n				{ submit: set_input,\n				  callback: pbutton_reset,\n				  buttons: { ")
STDOUT(str(_ok))
STDOUT(": \'confirm\', ")
STDOUT(str(_cancel))
STDOUT(": \'cancel\' }\n			 	});\n	});\n}\nif (")
STDOUT(str(_pbn_enable))
STDOUT(" == 1){\n	$.getScript(\'lib/multiselect/jquery.fcbkcomplete.js\');\n	// add a button after \'nosy_edit\' input field\n	var input = \'<button type=\"button\" id=\"nosy_edit\" >")
STDOUT(str(_pbutton))
STDOUT("</button>\';\n	$(\"#nosy\").parent().append(input);\n	// add some attributes to the button\n	$(\"#nosy_edit\").attr({\n		 \"style\" : \"width:auto;height:2.0em;font-weight:bold;font-size:1.1em;\"	\n	});\n	// Initialize the page and reset the \'nosy_edit\' button first.\n	pbutton_reset();\n}\n//********************************* End ***************************************************\n/******************************************************************************************* \npublic function\n*/\n// a function for set the selected values to existed input field\nfunction set_input(v,m,f){	\n	// \"Cancel\" button clicked, no action.\n	if (v == \"cancel\" ){return \'false\'};\n	// get the id of \"select\"  html component \n	id = $($(\"div .jqimessage select\")[0]).attr(\"id\");\n	// to different select id, relect different input component in the issue edit html page	\n	oAdaptor = {\"persons\" : \"#nosy\", \"asmSelect0\" : \"#keyword\"};\n	$.each(oAdaptor, function(key, value){\n		if (key == id){			\n			input = $(value);\n			return false\n		}	\n		else{ return true }				\n	});\n	// get all the options included by the select component\n	options = $(\"#\" + id).children();\n	// save the selected values\n	aCache = [];\n	if (id == \"persons\"){\n		$.each(options, function(){\n			if ($(this).attr(\"class\") == \"selected\"){\n				aCache.push($(this).attr(\"value\"));		\n			}	\n		});\n	}\n	else{\n		$.each(options, function(){\n			if ( $(this).attr(\"disabled\")){\n				aCache.push($(this).attr(\"value\"));		\n			}	\n		});\n	}	\n	assign_select = $(\"#assignedto\");\n	if (aCache.length == 0){\n		selected = \"\";\n		if(id == \"persons\"){assign_select.empty();}\n	} 					\n	else{		\n		for (i in aCache){aCache[i] = $.trim(aCache[i])};			\n		selected = aCache.join(\',\');\n		// for \'persons\' select button, it\'s need to set the \'assignedto\' options		\n		if (id == \"persons\"){			\n			assign_select.empty();				\n			select_value = assign_select.val();	\n			if(!select_value){\n				d = $(\"<option>\" +\'\' + \"</option>\");\n				d.attr({\'value\': select_value, \'selected\':\'selected\'});\n				assign_select.append(d);\n			}			\n			$.each(aCache, function(i, v){\n				d = $(\"<option>\" +v + \"</option>\");				\n				if (select_value && v == select_value){\n					jAttr = {\'value\' : v, \'selected\' : \'selected\'}	\n				}\n				else{jAttr = {\'value\' : v};}				\n				d.attr(jAttr);				\n				assign_select.append(d);\n			});			\n		} \n	};\n	input.attr(\"value\", selected);\n};\n//***************************** End ***************************\n")

