/* 

	In this file, first set the layout of the application, such as desktop and
	menu dock, etc. Then set the menus' function in login panel.

*/

/*
  
INITIALIZE THE TWO MENU 'Login' AND 'Register'

	1. 'Register' menu clicked function

	2. 'Login' menu clicked function	
	 
-------------------------------------------------------------------- */

<%
# PYTHON CODE
# get global variables stored in pagefn.py
pagefn = Import('/'.join(('', 'pagefn.py')))
registerTabsUrls = [ item.get('url') for item in pagefn.REGISTERTABS ]

# initial showing tabs' url
iniTabUrl = registerTabsUrls[0]

# Application name, when closing the registration dialog, 
# this name will be need to remove all the imported Assets tags.
registerAppName = pagefn.getApp(iniTabUrl,0)
%>

// the names for prelogin menues' click function 
var fNames = [ 'login', 'register' ];
// a object holds two functions for prelogin 
var loginFns = {
	/* The 'click' callback function for the 'login' menu. */
	'login': function(event){
		new Event(event).stop();
		
		modal = new MUI.Modal({
			title: '<%=_("Login Dialog") %>',			
			contentURL: "layout.ks/page_loginForm",
			modalOverlayClose: false,
			width: 400,
			height: 300,
			scrollbars: true,
						
			onClose: function(e){
				MUI.removeErr();
			}			
		});
		
		return modal
		
	},
	
	'register': function(event){
		new Event(event).stop();
		
		var dlgId = '<%=pagefn.REGISTERDIALOG %>'; 
		var tabsId = '<%=pagefn.REGISTERTABSID %>';
		
		// using python inside html to set the tabs' url to a javascript array
		var tabUrls = []; 
		<% for url in registerTabsUrls: %>					
			tabUrls.push("<%=url%>");
		<% end %>
		
		// Define a tab switching function. It's a global function and will be called
		// in registration form submitting process, for this reason we should not use
		// 'var' before the variable.
		tabSwitch = function(index) {
			var spinner = new Spinner(dlgId+'_content'); 						
			spinner.show();
			$(tabsId).getElements('li')[index].fireEvent('click');						
			MUI.updateContent({'element':$(dlgId), 'url':tabUrls[index]});
			spinner.hide();
		};
		
		new MUI.Modal({
			id: dlgId,
			title: '<%=_("Register Dialog") %>',			
			contentURL: '<%=iniTabUrl%>',
			//type: 'modal2',
			modalOverlayClose: false,
			width: 750,
			height: 400,
			padding: { top: 10, right: 12, bottom: 10, left: 12 },
			scrollbars: true,
			//shape: 'gaoge',
			toolbar: true,
			toolbarURL:'register/register.ks/tabs',
			toolbarOnload: function(){				
				// add selected class to each tabs when they are selected				
				MUI.initializeTabs(tabsId);
				$(tabsId).getElements('li')[0].fireEvent('click');							
			},
			
			onClose: function(e){	
				// remove validation errors' information	
				MUI.removeErr();		
					
				// Remove all the imported Assets				
				MUI.assetsManager.remove('<%=registerAppName %>','app');
			}			
		});
				
		return false;
	}
};

function preLoginInit(){	
	$('topNav').getElements('li').each(function(item,index){
		item.addEvent('click', loginFns[fNames[index]]);
	});
	
	// application initialization, including closing old session and removing old cookie
	MUI.appInit();
};


// Initialize MochaUI when the DOM is ready
window.addEvent('load', function(){ //using load instead of domready for IE8

	MUI.myChain = new Chain();
	MUI.myChain.chain(
		function(){MUI.Desktop.initialize();},
		function(){MUI.Dock.initialize();},
		preLoginInit()		
	).callChain();	

});
