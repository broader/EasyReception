/* 

	In this file we setup our Windows, Columns and Panels,
	and then inititialize MochaUI.
	
	At the bottom of Core.js you can setup lazy loading for your
	own plugins.

*/

/*
  
INITIALIZE THE TWO MENU 'Login' AND 'Register'

	1. 'Register' menu clicked function

	2. Build windows on onDomReady
	
		
	
	3. Add link events to build future windows
	
		if ($('myWindowLink')){
			$('myWindowLink').addEvent('click', function(e) {
				new Event(e).stop();
				jsonWindows();
			});
		}

		Note: If your link is in the top menu, it opens only a single window, and you would
		like a check mark next to it when it's window is open, format the link name as follows:

		window.id + LinkCheck, e.g., mywindowLinkCheck

		Otherwise it is suggested you just use mywindowLink

	Associated HTML for link event above:

		<a id="myWindowLink" href="pages/lipsum.html">My Window</a>	


	Notes:
		If you need to add link events to links within windows you are creating, do
		it in the onContentLoaded function of the new window. 
 
-------------------------------------------------------------------- */

// add a inner object to MUI for managing mootools.Assets importing action 
MUI.extend({ assetsManager: new AssetsManager()});


<%
# get global variables stored in pagefn.py
pagefn = Import('/'.join(('', 'pagefn.py')))
registerTabsUrls = [ item.get('url') for item in pagefn.REGISTERTABS ]
%>

// the names for prelogin menues' click function 
var fNames = [ 'login', 'register' ];
// a object holds two functions for prelogin 
var loginFns = {
	'login': function(event){
		new Event(event).stop();
		MochaUI.notification('Login Window');
		return false;
	},
	
	'register': function(event){
		new Event(event).stop();
		
		var dlgId = '<%=pagefn.REGISTERDIALOG %>'; 
		var tabsId = '<%=pagefn.REGISTERTABSID%>';
		
		new MUI.Modal({
			id: dlgId,
			title: '<%=_("Register Dialog") %>',			
			contentURL: 'register/accountForm.ks/index',
			//type: 'modal2',
			modalOverlayClose: false,
			width: 750,
			height: 400,
			padding: { top: 43, right: 12, bottom: 10, left: 12 },
			scrollbars: true,
			//shape: 'gaoge',
			toolbar: true,
			toolbarURL:'register/register.ks/tabs',
			toolbarOnload: function(){
				
				// add selected class to each tabs when they are selected				
				MUI.initializeTabs(tabsId);
				$(tabsId).getElements('li')[0].fireEvent('click');				
			}			
		});
		
		// using python inside html to set the tabs' url to a javascript array
		var tabUrls = []; 
		<% for url in registerTabsUrls: %>					
			tabUrls.push("<%=url%>");
		<% end %>
		
		// Define a tab switching function. It's a global function and will be called
		// in registration form submitting process, for this reason we should not use
		// 'var' before the variable. 
		tabSwitch = function(index) {
			$(tabsId).getElements('li')[index].fireEvent('click');			
			MUI.updateContent({'element':$(dlgId), 'url':tabUrls[index]});
		};
				
		return false;
	}
};

function preLoginInit(){	
	$('topNav').getElements('li').each(function(item,index){
		item.addEvent('click', loginFns[fNames[index]]);
	});
};


// Initialize MochaUI when the DOM is ready
window.addEvent('load', function(){ //using load instead of domready for IE8

	MUI.myChain = new Chain();
	MUI.myChain.chain(
		function(){MUI.Desktop.initialize();},
		function(){MUI.Dock.initialize();},
		preLoginInit()	
		//function(){initializeWindows();}		
	).callChain();	

});
